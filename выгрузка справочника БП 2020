//test from VS CODE
var myMain = createMainInstance (Context, ArisData) ;
myMain.execute();

function createMainInstance(context, arisData)  {

    function Main(context, arisData) {
        
        this._context = context; 
        this._arisData = arisData;

    }
     
    Main.prototype.execute =  function(){
        if (!this._context || !this._arisData) {
            return; // unit test environment use case
        }
        var g_nLoc =this._context.getSelectedLanguage(); 
          var rootGroup = arisData.getActiveDatabase().RootGroup ( );
          
          var model_treeGr = rootGroup.Childs(true).filter(function(mygr){ 

             return  ((mygr.Name(g_nLoc) =="  Модель (дерево) бизнес-процессов Банка")
             &&(mygr.Path(g_nLoc) == "Бизнес-модель Банка\\Бизнес-модель  «как есть»\\  Модель (дерево) бизнес-процессов Банка")
             );
          })[0];
          ////////////
/* 
так тоже можно, но пока не требуется

 var db = ArisData.getSelectedDatabases()[0]
 var searchItem = db.createSearchItem(Constants.AT_NAME, g_nLoc, false) //name not maintained
 var searchItem2 = db.createSearchItem(Constants.AT_NAME, g_nLoc, "  Модель (дерево) бизнес-процессов Банка", Constants.SEARCH_CMP_EQUAL, true, true)//case sensitive, allow wildcards
 var result = db.Find(Constants.SEARCH_GROUP, null, searchItem.or(searchItem2)).filter(function(gr){
 return gr.Path() == "Бизнес-модель Банка\Бизнес-модель  «как есть»\  Модель (дерево) бизнес-процессов Банка"
 })
 */
          //////////
          var allmodels = model_treeGr.ModelList ( true, [Constants.MT_VAL_ADD_CHN_DGM] );
          var alldefs = [];
          for (var i=0; i<allmodels.length; i++){
            alldefs = alldefs.concat(allmodels[i].ObjOccListBySymbol ( [Constants.ST_VAL_ADD_CHN_SML_1] ).map(function (occ){return occ.ObjDef();})) 
          }
      alldefs = arisData.Unique(alldefs);//.map(function(def){return def.Name(g_nLoc)}); //собрали все объекты для дальнейшего вывода
      alldefs = arisData.sort(alldefs,Constants.AT_NAME, context.getSelectedLanguage() );

var obj_class = new init_bp_obj_class (context, arisData);
 
var allbp =[];
for (var i=0; i<alldefs.length;i++){
allbp.push( new obj_class (context, arisData,alldefs[i]));
}

var s=0;      
  var outFile = new java.io.FileWriter(getString ("TEXT_1"), false);  // file DataTreeBP.CSV    
   var quo = "\"";
   var nl = "\r\n";
   var comma = "|";////разделитель между полями!!!!! при необходимости заменить  на нужный 
   var qcq = quo + comma + quo;
  
  var nl = "\r\n";
  var strToFile = "outputString";
 for (i=0; i< allbp.length;i++)  { //279- 3.2.5.5
   strToFile = quo + 
                allbp[i].id+qcq+
                allbp[i].num+qcq+
                allbp[i].name+qcq+
                allbp[i].owner+qcq+
                allbp[i].numTextName+qcq+
                allbp[i].lastnode +qcq+
                allbp[i].getParentBP+qcq+
                allbp[i].dateBegin+qcq+
                allbp[i].dateEnd+qcq+
                Replacer(String(allbp[i].target)) + qcq +
                Replacer(String(allbp[i].inputs)) + qcq +
                Replacer(String(allbp[i].outputs)) + qcq +
                Replacer(String(allbp[i].products)) + qcq +
                Replacer(String(allbp[i].remark)) + quo + nl;
   
        outFile.write(strToFile);
 
 }
    outFile.flush();
    outFile.close();

    
    
function init_bp_obj_class (context, arisData){

function bp_obj_class (context, arisData, bpdef){
    this.objDef = bpdef;    
    this.id = bpdef.Identifier(g_nLoc).slice(bpdef.Identifier(g_nLoc).indexOf(".")+1);
    this.num = bpdef.Name(g_nLoc).slice(0,bpdef.Name(g_nLoc).indexOf(" "));
    this.name = bpdef.Name(g_nLoc);
    this.owner = this.getOwner();
    this.numTextName = this.getnumTextBPName();
    this.lastnode = this.detalisationExist();
    this.getParentBP = this.getParentBP();
    this.dateBegin = this.getStartDate();
    this.dateEnd = this.getEndDate();
    this.target = this.getTargets();
    this.inputs = this.getInputs();
    this.outputs = this.getOutputs();
    this.products = this.getProducts();
    this.remark = bpdef.Attribute(Constants.AT_REM,g_nLoc).getValue().toString().trim();

}

        var proto = bp_obj_class.prototype;
        proto.getOwner = function (){
        var obj = this.objDef;

     var modelOkr =obj.OccList().filter(function(occ){
     return occ.getConnectedObjOccs ( [Constants.ST_EMPL_TYPE] , Constants.EDGES_IN );})[0];
  //   return ((occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_2)||(occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_1))}).
   //  map(function(occ){return occ.Model() }).filter(function(model){ return ((model.Name(g_nLoc).indexOf("_Окружение БП ") ==0)||(model.Name(g_nLoc).indexOf("Н_Окружение БП ") ==0)) })[0];
     
     
     
/*        if (modelOkr == null) {
          //  var modelBP = obj.AssignedModels ( ).filter(function(mod){return mod.Name(g_nLoc)==obj.Name(g_nLoc)})[0];
            var modelOkr = obj.OccList().filter(function(occ){
                 return ((occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_2))});
//                 .map(function(occ){return occ.Model() })[0];
        }
*/      
        if (modelOkr==null) {Dialogs.MsgBox("нет модели для БП "+ obj.Name(g_nLoc))};
        var ownerobj = modelOkr.getConnectedObjOccs ( [Constants.ST_EMPL_TYPE] , Constants.EDGES_IN );
        if (ownerobj.length>1) {
            Dialogs.MsgBox("ВНИМАНИЕ!!! \n для БП "+obj.Name(g_nLoc)+" указано более одного владельца!!!")
            return "ERROR WITH OWNER"
        }
        else {
            if (ownerobj.length==0) { return 999; } 
            else {
            return ownerobj[0].ObjDef().Attribute(Constants.AT_PERS_RESP,g_nLoc).getValue().toString().slice(0,ownerobj[0].ObjDef().Attribute(Constants.AT_PERS_RESP,g_nLoc).getValue().toString().indexOf("_"));
            }
                
        }
        
        
        }
        //////
        proto.getnumTextBPName = function (){
        var obj = this.objDef;
        var code = obj.Name(g_nLoc).trim();
            if (code == "(Без имени)") code = occFunc.ObjDef().Attribute(Constants.AT_DESC,g_nLoc).GetValue(true).toString().trim();
           
            var mas = code.substr(0, code.lastIndexOf(".")).split("");
            var code_bp_txt = "";
           
            switch (mas[0]){
                case '1':
                code_bp_txt = "УПБП";
                break;
               
                case '2':
                code_bp_txt = "ОББП"
                break;
               
                case '3':
                code_bp_txt = "ОСБП";
               
                switch (mas[2]){
                    case '1':
                    code_bp_txt += "КК";
                    break;
                   
                    case '2':
                    code_bp_txt += "ФЛ"
                    break;
                   
                    case '3':
                    code_bp_txt += "ФИ";
                    break;
                   
                    case '4':
                    code_bp_txt += "ИД";
                    break;
                }
                break;
               
                case '4':
                code_bp_txt = "РЗБП";
                break;
               
                case '5':
                code_bp_txt = "ПРБП";
                break;
            }
           
            code_bp_txt += "_" + code.substr(0, code.indexOf(" "));   
           
            return code_bp_txt;
        }
        
        proto.detalisationExist = function (){
        var obj = this.objDef;
/*        var occs = obj.OccList().filter(function(occ){
        return occ.getConnectedObjOccs( [Constants.ST_VAL_ADD_CHN_SML_2,Constants.ST_VAL_ADD_CHN_SML_1] , Constants.EDGES_OUT)})    ;
*/
         var modelBP = obj.AssignedModels ( ).filter(function(mod){
               return ((mod.Name(g_nLoc).indexOf("_Окружение БП")==0))});
        
        if (modelBP.length==0) {return 1}
             else {return 0}
     
        
        }

        proto.getParentBP = function(){
        var obj = this.objDef;
        var parent = obj.CxnListFilter ( Constants.EDGES_IN, [Constants.CT_IS_PRCS_ORNT_SUPER] );
        if (parent.length ==0 ) {
        //    Dialogs.MsgBox("нет парента для "+ obj.Name(g_nLoc));
        return 0}
        else { parent = parent[0].SourceObjDef ( );
       /* var parent = obj.OccList().filter(function(occ){
            return occ.getConnectedObjOccs ( [Constants.ST_VAL_ADD_CHN_SML_2,Constants.ST_VAL_ADD_CHN_SML_1] , Constants.EDGES_IN ).length!=0 ;   })[0] ; //ищем рыбий хвост */
     if (parent==null) {return 0}
    else {
            parent = parent.Identifier(g_nLoc);
        
        return parent.slice(parent.indexOf(".")+1);
        }
        }
        }

        proto.getStartDate = function (){
        var obj = this.objDef;
//        var modelOkr = obj.AssignedModels ( ).filter(function(mod){return ((mod.Name(g_nLoc).indexOf("_Окружение БП ") == 0)||(mod.Name(g_nLoc).indexOf("Н_Окружение БП ") == 0))})[0];
             var modelOkr =obj.OccList().filter(function(occ){
             return ((occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_2)||(occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_1))}).
             map(function(occ){return occ.Model() }).filter(function(model){ return ((model.Name(g_nLoc).indexOf("_Окружение БП ") ==0)||(model.Name(g_nLoc).indexOf("Н_Окружение БП ") ==0)) })[0];
                if (modelOkr == null) {
                  //  var modelBP = obj.AssignedModels ( ).filter(function(mod){return mod.Name(g_nLoc)==obj.Name(g_nLoc)})[0];
                    var modelOkr = obj.OccList().filter(function(occ){
                         return ((occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_2)||(occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_1))}).map(function(occ){return occ.Model() })[0];
                }
               
        var datestart = modelOkr.Attribute(Constants.AT_VALID_FROM,g_nLoc).getValue();
        if ( datestart == "" ) { return "2017-04-20"}
        else {
                //задаем формат исходной текстовой даты
                var formatForParse = new java.text.SimpleDateFormat("dd.MM.yyyy");  
                //переводим строковую дату в формат "дата"
                var date = formatForParse.parse(datestart);            
                //задаем формат преобразования даты
                var sqlFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");  
                return sqlFormat.format(date);
        }
        }
         
         
        proto.getEndDate = function (){
        var obj = this.objDef;
             var modelOkr =obj.OccList().filter(function(occ){
             return ((occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_2)||(occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_1))}).
             map(function(occ){return occ.Model() }).filter(function(model){ return ((model.Name(g_nLoc).indexOf("_Окружение БП ") ==0)||(model.Name(g_nLoc).indexOf("Н_Окружение БП ") ==0)) })[0];
                if (modelOkr == null) {
                  //  var modelBP = obj.AssignedModels ( ).filter(function(mod){return mod.Name(g_nLoc)==obj.Name(g_nLoc)})[0];
                    var modelOkr = obj.OccList().filter(function(occ){
                         return ((occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_2)||(occ.SymbolNum ( )==Constants.ST_VAL_ADD_CHN_SML_1))}).map(function(occ){return occ.Model() })[0];
                }
        var dateend = modelOkr.Attribute(Constants.AT_VALID_UNTIL,g_nLoc).getValue();
        if ( dateend == "" ) { return "2100-01-01"}
        else {
                //задаем формат исходной текстовой даты
                var formatForParse = new java.text.SimpleDateFormat("dd.MM.yyyy");  
                //переводим строковую дату в формат "дата"
                var date = formatForParse.parse(dateend);            
                //задаем формат преобразования даты
                var sqlFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");  
                return sqlFormat.format(date);
        }
        }        

        proto.getTargets = function () {
        var obj = this.objDef;
        
        var modelOkr = obj.AssignedModels ( ).filter(function(mod){return ((mod.Name(g_nLoc).indexOf("_Окружение БП ") == 0)||(mod.Name(g_nLoc).indexOf("Н_Окружение БП ") == 0)) })[0];
        if (modelOkr == null) {
         return ""}
         else {
                var targets  = modelOkr.ObjOccListBySymbol ( [Constants.ST_OBJCTV] );
                var target = new String;
                for (var i=0; i< targets.length; i++) {
                  target = target+targets[i].ObjDef().Name(g_nLoc).toString().trim();
//                  target.replaceAll(String);
                  if (targets[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().length()==0)  {target = target + "." }
                  else { target = target + " "+targets[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().trim()+"." ;}
                }

             return target;
        //условие ? выражение1 : выражение2     
             
         }
       
        }
        proto.getInputs = function() {
                var obj = this.objDef;
                var objOCC = obj.OccList (  ).filter(function(occ){
                return ((occ.Model().Name(g_nLoc).indexOf("_Окружение БП ") == 0)||(occ.Model().Name(g_nLoc).indexOf("Н_Окружение БП ") == 0))})[0];
         if (objOCC==null) {return ""}
                var inputsObj=objOCC.getConnectedObjOccs ( [Constants.ST_PACK, Constants.ST_PACK_PIC_2] , Constants.EDGES_IN );
    if (inputsObj.length==0)  {return ""}
    else {
       var allinputs ="";
        for (var i=0; i<inputsObj.length;i++){
         allinputs = allinputs +
         inputsObj[i].ObjDef().Name(g_nLoc).toString().trim();
         if (inputsObj[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().length()==0 ) { 
               allinputs = allinputs+"." }
               else {
                     allinputs=allinputs+" "+inputsObj[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().trim()+". ";
                    }
        }
        
        return String(allinputs);
        }
        }
        proto.getOutputs = function() {
         var obj = this.objDef;
         var objOCC = obj.OccList (  ).filter(function(occ){
                    //[Constants.MT_VAL_ADD_CHN_DGM]
                return ((occ.Model().Name(g_nLoc).indexOf("_Окружение БП ") == 0)||(occ.Model().Name(g_nLoc).indexOf("Н_Окружение БП ") == 0))})[0];
                     if (objOCC==null) {return ""};
                var outputsObj=objOCC.getConnectedObjOccs ( [Constants.ST_PACK, Constants.ST_PACK_PIC_2] , Constants.EDGES_OUT );
        if (outputsObj.length==0) {return ""}
        else {
        var alloutputs ="";
        for (var i=0; i<outputsObj.length;i++){
         alloutputs = alloutputs +
         outputsObj[i].ObjDef().Name(g_nLoc).toString().trim();
         if (outputsObj[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().length()==0) {
            alloutputs = alloutputs+"."}
            else {alloutputs = alloutputs+" "+
                 outputsObj[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().trim()+". ";
                  }
        }
        return alloutputs;
        }
        }
       proto.getProducts = function() {
         var obj = this.objDef;
         var objOCC = obj.OccList (  ).filter(function(occ){
            return (occ.getConnectedObjOccs ( [Constants.ST_PERFORM, Constants.ST_PROD_SERV] , Constants.EDGES_OUT ).length!=0);
//         ((occ.Model().Name(g_nLoc).indexOf("_Окружение БП ") == 0)||(occ.Model().Name(g_nLoc).indexOf("Н_Окружение БП ") == 0)
         });
        if ( objOCC.length==0 ) {return ""}
        else {
        var productsObj=objOCC[0].getConnectedObjOccs ( [Constants.ST_PERFORM, Constants.ST_PROD_SERV] , Constants.EDGES_OUT );
         var allproducts ="";
         for (var i=0; i<productsObj.length;i++){
         allproducts = allproducts +
         productsObj[i].ObjDef().Name(g_nLoc).toString().trim();
             if (productsObj[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().length()==0) {allproducts=allproducts+"."; }
             else { allproducts = allproducts+ +" "+         productsObj[i].ObjDef().Attribute(Constants.AT_DESC, g_nLoc).getValue().toString().trim()+". ";
            }
        }
        return allproducts;
       }
       }
return bp_obj_class;
}      
function Replacer(str){
    
    var newStr = new String; 
    var arrStr = str.split("");
    
    for (var i = 0; i < arrStr.length; ++i){
        switch (arrStr[i]){
            case String.fromCharCode(34): // " простая двойная кавычка
            case String.fromCharCode(171):// открывающаяся парная кавычка
            case String.fromCharCode(187): //закрывающаяся парная кавычка
            newStr += String.fromCharCode(92) + String.fromCharCode(34); // 92 -символ \ (обратный слэш) + "
            break;
            
            case String.fromCharCode(13)://разрыв строки
            newStr += String.fromCharCode(92) + String.fromCharCode(114);// комбинация символов \r
            break;
            
            case String.fromCharCode(10):
            newStr += String.fromCharCode(92) + String.fromCharCode(110); // подставляется \n
            break;
            
            default:
            newStr += arrStr[i];     
        }
    }  

    return newStr;
}
      
function init_repo_class(context, arisData){ // класс репозитория
        
        var repo_class = function (context, arisData, firstelement){
           this.id  = firstelement.ObjDef().Identifier().slice(firstelement.ObjDef().Identifier().indexOf("."));;
           this.element = firstelement;
           this.childs = this.getChilds (); 
           this.parents = this.getParentObj ();

        }
        var proto = repo_class.prototype;
       proto.getChilds = function (){
           
       var element = this.element;
       var cxnarray = element.CxnOccList ( );
       var childArray = [];
       for (var i=0; i< cxnarray.length; i++) {
        childArray.push(cxnarray[i].TargetObjOcc ( ));
        
       }
       return childArray;
       // getConnectedObjOccs ( int[] aSymbolTypes, int direction )
       }

       proto.getParentObj = function (){
       var element = this.element;
       
         var cxnarray = element.CxnOccList ( );
       var parrent = [];
       for (var i=0; i< cxnarray.length; i++) {
        parrent.push(cxnarray[i].SourceObjOcc ( ));
        
       }
       parrent  = arisData.Unique(parrent);
       return parrent[0];
       // getConnectedObjOccs ( int[] aSymbolTypes, int direction )
       }





       return repo_class;
        }// endOF класс репозитория 
        
    } //end of prototype.execute 

////////////////////////////////////////////////////////
var myMain  = new Main(context, arisData);
 return myMain;

////////////////////////////////////////////////////////
} //f end OF function createMainInstance(context, arisData)  {
